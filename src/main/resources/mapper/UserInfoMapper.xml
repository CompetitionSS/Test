<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- JAVA와 연결할 Mapper 파일 설정 -->
<mapper namespace="pcs.css.persistance.mapper.IUserInfoMapper">

    <!-- 회원 가입하기(회원정보 등록하기) -->
    <insert id="insertUserInfo" parameterType="UserInfoDTO">
        INSERT INTO USERINFO
        (
            USER_SEQ,
            USER_NAME,
            PASSWORD,
            EMAIL,
            REG_ID,
            REG_DT,
            CHG_DT,
            USER_ID,
             CHG_ID
        )
        VALUES(
                (SELECT NVL(MAX(A.USER_SEQ),0)+1 FROM USERINFO A),
                  #{user_name},
                  #{password},
                  #{email},
                  #{user_id},
                  SYSDATE,
                  SYSDATE,
                  #{user_id},
                  #{user_id}
              )
    </insert>


    <!-- 이메일로 회원 가입 중복 방지하기 -->
    <select id="getUserExists" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT DECODE(COUNT(1), 0, 'N', 'Y') AS EXISTS_YN
        FROM USERINFO
        WHERE EMAIL = #{email}
    </select>


    <!-- 로그인을 위해 아이디와 비밀번호가 일치하는지 확인하기 -->
    <select id="getUserLoginCheck" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT USER_ID, USER_NAME, EMAIL
        FROM USERINFO
        WHERE USER_ID = #{user_id}
          AND PASSWORD = #{password}
    </select>
    <!-- 아이디 찾기 -->
    <select id="find_id" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        select * from USERINFO where email = #{email}
    </select>
    <!-- 비밀번호찾기 -->
    <update id="find_ps" parameterType="UserInfoDTO">
        update USERINFO
        set password = #{password,jdbcType=VARCHAR}
        where user_id = #{user_id,jdbcType=VARCHAR}
        and email = #{email,jdbcType=VARCHAR}
    </update>
    <select id="find_pscheck" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        select *
        from USERINFO
        where user_id = #{user_id,jdbcType=VARCHAR}
        and email = #{email,jdbcType=VARCHAR}
    </select>
    <select id="getUserList" resultType="UserInfoDTO">
        SELECT *

        FROM USERINFO

        ORDER BY USER_SEQ DESC
    </select>
</mapper>